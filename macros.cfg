#https://github.com/sporkus Print start with Print_area_mesh macro

[gcode_macro PRINT_START3]
gcode:
    # Parameters
    {% set th = printer['toolhead'] %}
    {% set temp_bed = params.BED %}
    {% set temp_cham = params.CHAMBER|default(0)|float %}
    {% set temp_hotend = params.HOTEND %}
    {% set print_min = params.PRINT_MIN|default("{},{}".format(*th.axis_minimum)) %}
    {% set print_max = params.PRINT_MAX|default("{},{}".format(*th.axis_maximum)) %}

    BED_MESH_CLEAR
    G90
    M140 S{temp_bed}
    M104 S100 ; turns hotend fan on
    M106 S255 ; part fan 100%
    G28
    G0 X150 Y300 Z50 F3000
    M84
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={temp_bed}
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={temp_cham-2}
    M104 S{temp_hotend}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp_hotend}
    #CLEAN_NOZZLE
    PRINT_AREA_MESH PRINT_MIN={print_min} PRINT_MAX={print_max}
    #PRIME_NOZZLE
    G0 X{th.axis_maximum.x/2} Y{th.axis_maximum.y/2} Z5 F40000
    STATUS_PRINTING



#################################################################################################################################################################################################################
#Ellis Print_start and Print_end macro

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bmc: 0
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:		
	# Parameters
    {% set bmc = params.BMC|default(0)|int %}
	{% set bed = params.BED|int %}
	{% set hotend = params.HOTEND|int %}
	{% set chamber = params.CHAMBER|default(0)|int %}

	# Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}	
	
	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=0  													; cancel exhaust off timer (if there is one)
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0      												; cancel off timer (if there is one)
	#SET_PIN PIN=caselight VALUE=1																		; turn on case light
	RESETSPEEDS																							; reset speed, accel etc to configured values
	#RESETRGB																							; reset LCD RGB
	M104 S140																							; set hotend to no-ooze temp
	M140 S{bed}																							; set bed to target temp
	G28																									; home
	G90																									; absolute positioning
	{% if printer["temperature_sensor chamber"].temperature < chamber %}								; - if chamber is not at temp yet:
		HEATSOAK T={bed} MOVE=1																			; 	heatsoak macro + park in center
		M190 S{bed} 																					; 	wait for bed final temp
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}							; 	wait for chamber final temp
	{% else %}																							; - if chamber is already at temp:
		{% if printer.heater_bed.temperature < (bed-2) %}												; -- but bed is not fully heated (within 2C):
			HEATSOAK T={bed} MOVE=1																		; 		heatsoak and park
			M190 S{bed} 																				; 		wait for bed final temp
		{% else %}																						; -- and bed is already heated:
			HEATSOAK T={bed} MOVE=0																		; 		"heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
		{% endif %}
	{% endif %}	
	M106 S0																								; turn off part cooling fan (from heatsoak)
	BED_MESH_CLEAR																						; clear bed mesh
	ATTACH_PROBE_LOCK																					; attach klicky + lock
	QUAD_GANTRY_LEVEL																					; quad gantry level
	G28 Z																								; home z
	G90 													 											; absolute positioning
	G0 Z20																								; hop up to prevent knocking probe off after homing Z
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500					; move to center of bed to prevent knocking probe off after homing Z (otherwise QGL just moves our Z hop down again before traveling)
    {% if bmc == 1 %}                                                                                   ; Bed Levelling
	    BED_MESH_CALIBRATE																			    ; mesh
	    G28 Z																							; home z again
	    G0 Z20																							; hop up to prevent knocking probe off after homing Z
    {% endif %}
    #DOCK_PROBE_UNLOCK															        				; stow probe, unlock (default for clean nozzle)
	#G0 X125 Z10 Y{printer.toolhead.axis_maximum.y} F19500												; move to right of nozzle brush
	PARKFRONTLOW                                                                                        ; manual clean nozzle (Tommy)
    M109 S{hotend} 																						; set & wait for hotend final temp
	#CLEANNOZZLE																							; clean nozzle while hot
	#TEMPADJUSTPA																						; change PA based on bed temp
	CALIBRATE_Z																							; calibrate z offset with hot nozzle
	DOCK_PROBE_UNLOCK	                                                                                ; remove when using cleannozzle (Tommy)
    #SWIPENOZZLE																							; swipe nozzle brush on way to print purge line
	#SET_FAN_SPEED FAN=Exhaust SPEED=0.1																	; set chamber fan to 10%
	G92 E0                              																; reset Extruder
	G1 X0 Y20 Z0.3 F19500.0           																	; move to start position
	G1 X0 Y200.0 Z0.3 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up
	#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1													; enable filament sensor



[gcode_macro PRINT_END]
gcode:
	#RESETRGB																							; revert LCD RGB
	#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0													; disable filament sensor
	CLEAR_PAUSE																							; clear pause (from M191) if there is one
	{% if printer.heater_bed.temperature >= 100 %}												
		SET_FAN_SPEED FAN=Exhaust SPEED=1  																; crank exhaust fan to 100% to evacuate chamber
	{% endif %}													
	M400                         	   																	; wait for buffer to clear
	G92 E0                        	    																; zero the extruder
    G1 E-10 F1800                                                                                        ; retract filament
	M104 S0						 	    			 													; turn only the hotend off
	M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}												; return the bed to temp, some slicers like to turn it off
    M107                         	   			 	 													; turn off part cooling fan
	G91                             							 										; relative positioning
    G1 Z5 F3000                  	    			 													; move nozzle up 5mm
    G90                           	    			 													; absolute positioning
	G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0  					; park nozzle at rear
	BED_MESH_CLEAR																						; clear bed mesh									
	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120													; turn exhaust off in 2 min
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=1800	 												; turn everything off in 30 min
	RESETSPEEDS																							; reset speed, accel etc to configured max values
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0														; disable XYE steppers (not z)
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
	#BEEP I=3																							; beep 3 times

[delayed_gcode EXHAUST_OFF]
gcode:
	SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
	OFF 

#################################################################################################################################################################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32
   
#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
#    G1 Z20 F3000                   ; move nozzle away from bed 

#[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-5 F1800                ; retract filament
#    G91                            ; relative positioning
#    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
#    TURN_OFF_HEATERS
#    M107                           ; turn off fan
#    G1 Z2 F3000                    ; move nozzle up 2mm
#    G90                            ; absolute positioning
#    G0  X125 Y250 F3600            ; park nozzle at rear
#   BED_MESH_CLEAR

########################################################################################################################################################################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro ABORT]
description: Shutdown Klipper
gcode:
  M112

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

################ MISC ##########################

[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(110)|int %}
	{% set move = params.MOVE|default(1)|int %}

	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	SET_FAN_SPEED FAN=Exhaust SPEED=0		 		; turn off exhaust fan
	#SET_PIN PIN=caselight VALUE=1					; turn on case light
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S180									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										; conditional home
		PARKCENTER						 			; move to bed
	{% endif %}


######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}
	
######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500		
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500										
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park top rear left
[gcode_macro PARKREAR]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500		
	RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER
	
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500										
	RESTORE_GCODE_STATE NAME=PARKBED